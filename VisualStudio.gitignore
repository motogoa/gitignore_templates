
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates
#
# new location for Visual Studio 2015
.vs/
#
# specific to MonoDevelop and Xamarin Studio
*.userprefs
#
# workspace options file
# remove: if no longer targeting Visual Studio 6
*.opt

# Mono auto generated files
mono_crash.*

# Build results

[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/

[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results

[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit

*.VisualState.xml
TestResult.xml
nunit-*.xml

# ATL (Active Template Library) Project
# remove: if you do not have an ATL project in your solution
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c


# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio

*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch

*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah
# a JS unit testing framework for commit
# url: https://github.com/mmanela/chutzpah
# remove: if you do not use the Chutzpah test runner in your project
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# temporary files generated by the Visual Studio profiling tools
# remove: if you are not using these features of Visual Studio
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
# remove: if you are not using TFVC in this repository
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper
# a Visual Studio extension which supports various project types
# url: https://www.jetbrains.com/resharper/
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover
# a code coverage plugin for Visual Studio
# url: https://www.jetbrains.com/dotcover/
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
# a continuous test runner for Visual Studio
# url: http://www.ncrunch.net
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
# a continuous test runner for Visual Studio
# url: http://www.continuoustests.com/
*.mm.*
AutoTest.Net/

# Web Workbench
# SASS, LESS and Coffeescript integration for Visual Studio
# url: http://www.mindscapehq.com/products/web-workbench
.sass-cache/

# InstallShield
# installer framework for Windows machines
# url: http://www.flexerasoftware.com/producer/products/software-installation/installshield-software-installer/
#
# output folder
[Ee]xpress/

# DocProject
# a document generation add-in for Visual Studio based on Sandcastle
# url: http://docproject.codeplex.com/
# remove: if you are using Visual Studio 2010 or later (which are not supported)
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# ClickOnce installer and deployment
# url: https://msdn.microsoft.com/en-us/library/142dbbz4(v=vs.90).aspx
# remove: if you do not have ClickOnce publishing enabled for your projects
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
*.pubxml
*.publishproj

# NuGet
# summary: the package manager tool used in Visual Studio
# url: https://nuget.org
#
# output packages created by NuGet
*.nupkg
#
# Since NuGet 2.7, package restore is now a first class feature of Visual Studio
# so you do not need to check in your packages
# url: https://docs.nuget.org/consume/package-restore
# remove: if you do not wish to restore packages in this way, or have
          package restore disabled
**/packages/*
#
# some packages include MSBuild targets files, which are stored in this
# location and should be kept in version control
!**/packages/build/
#
# this file is a local listing of where to find your packages.config files, and
# is regenerated by Visual Studio during a build
# include: if you wish to version this file
#!**/packages/repositories.config
=======
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

~$*
*~
*.dbmdl
*.dbproj.schemaview

node_modules/

# Orleans
# a Distributed Actor Model framework for .NET
# url: https://github.com/dotnet/Orleans
#
# code generated as part of compilation
=======
*.jfm
*.pfx
*.publishsettings

orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
# url: https://www.microsoft.com/silverlight/
# output directory for *.xap artifacts
ClientBin/
# temporary directory used by compiler
Generated_Code/

# Migrating Projects
# When upgrading a solution to a newer version of Visual Studio, there are a
# number of output files created so you can view the log, troubleshoot issues
# and potentially revert to a backup. These can be safely ignored, because
# you're already using version control.
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
# remove: if you do not have Business Intelligence projects in your solution
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
# a local cache of assemblies
# url: https://msdn.microsoft.com/en-us/library/hh549175.aspx
# remove: if you are not using Microsoft Fakes in your projects
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
# url: https://github.com/Microsoft/nodejstools
# remove: if you do not have this extension installed
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# JetBrains Rider
*.sln.iml
